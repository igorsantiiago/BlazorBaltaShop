@page "/categories/edit/{id:int}"
@inject ApplicationDbContext Context
@inject NavigationManager Navigation
@rendermode InteractiveServer
@attribute [Authorize]

<h1>Editar Categoria</h1>
<hr />
@if (Model is null)
{
	<p class="text-center fw-bold">Categoria não encontrada</p>
}
else
{
	<EditForm Model="@Model" OnValidSubmit="OnValidSubmitAsync">
		<DataAnnotationsValidator />

		<div class="mb-3">
			<label class="form-label">Id</label>
			<InputNumber @bind-Value="Model.Id" class="form-control" readonly />
		</div>
		<div class="mb-3">
			<label class="form-label">Categoria</label>
			<InputText @bind-Value="Model.Title" class="form-control" />
			<ValidationMessage For="@(() => Model.Title)" />
		</div>

		<button type="submit" class="btn btn-primary">Atualizar</button>
		<a href="/categories" class="btn btn-danger">Cancelar</a>

	</EditForm>
}

@code {
	[Parameter]
	public int Id { get; set; }
	public Category? Model { get; set; }

	protected override async Task OnInitializedAsync()
		=> Model = await Context.Categories.AsNoTracking().FirstOrDefaultAsync(x => x.Id == Id);

	public async Task OnValidSubmitAsync()
	{
		Context.Categories.Update(Model!);
		await Context.SaveChangesAsync();
		Navigation.NavigateTo("categories");
	}
}
